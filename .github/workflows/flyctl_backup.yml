name: Run on Fly
on:
  push:
    branches:
      - main

jobs:
  create_release:
    name: Create release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up flyctl
        uses: superfly/flyctl-actions/setup-flyctl@master

      - name: Run pg_dump
        id: pg_dump
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
        run: |
          PG_DUMP_OUTPUT=$(flyctl ssh console --command "pg_dump ${{ secrets.FLY_DB_URI }}")
          echo $PG_DUMP_OUTPUT > ./pg_backup

      - uses: actions/upload-artifact@v3
        with:
          name: pg_backup
          path: ./pg_backup


      - name: Create release
        id: create_release
        uses: ncipollo/release-action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: $(date +"%Y-%m-%d")
          artifacts: "./pg_backup"

#          CURRENT_TAG=$(git describe --tags --abbrev=0)
#          echo $CURRENT_TAG
#          echo "name=$CURRENT_TAG" >> $GITHUB_OUTPUT
#          echo "::set-output name=current_tag::$CURRENT_TAG"

      # - name: Increment Tag Version
      #   id: increment_tag_version
      #   run: |
      #     CURRENT_TAG=$([[ -n "${{ steps.get_tag_version.outputs.current_tag }}" ]] && echo "${{ steps.get_tag_version.outputs.current_tag }}" || echo "1.0.0")
      #     NEW_TAG=$(echo "${CURRENT_TAG}" | awk -F '.' '{++$NF; OFS="."; print}')
      #     echo "name=$NEW_TAG" >> $GITHUB_OUTPUT
#          echo "::set-output name=new_tag::$NEW_TAG"

      # - name: Create Git Tag
      #   id: create_git_tag
      #   run: |
      #     git tag ${{ steps.increment_tag_version.outputs.new_tag }}
      #     git push origin ${{ steps.increment_tag_version.outputs.new_tag }}

      # - name: Create Release
      #   uses: ncipollo/release-action@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     version: ${{ steps.increment_tag_version.outputs.new_tag }}
      #     files: |
      #       ./pg_backup
